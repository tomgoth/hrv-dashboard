{"ast":null,"code":"var _jsxFileName = \"/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport axios from \"axios\";\nimport { quantile } from './utils/math';\n\nfunction App() {\n  const [data, setData] = useState();\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent').then(response => {\n      let r = response.data.data;\n      let rMSSDArr = r.map(datum => datum.rMSSD);\n      setData(r);\n      setQ25(quantile(rMSSDArr, .25));\n      setQ50(quantile(rMSSDArr, .50));\n      setQ75(quantile(rMSSDArr, .75));\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(LineChart, {\n    width: 1000,\n    height: 600,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"rMSSD\",\n    stroke: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    stroke: \"#ccc\",\n    strokeDasharray: \"5 5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: q25,\n    label: \"25th Percentile\",\n    stroke: \"red\",\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: q50,\n    label: \"50th Percentile\",\n    stroke: \"red\",\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: q75,\n    label: \"75th Percentile\",\n    stroke: \"red\",\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"createdAt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js"],"names":["React","useState","useEffect","Fragment","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","axios","quantile","App","data","setData","q25","setQ25","q50","setQ50","q75","setQ75","get","then","response","r","rMSSDArr","map","datum","rMSSD"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport axios from \"axios\";\nimport { quantile } from './utils/math'\n\n\n\nfunction App() {\n  const [data, setData] = useState();\n\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent')\n      .then((response) => {\n        let r = response.data.data\n        let rMSSDArr = r.map(datum => datum.rMSSD)\n        setData(r);\n        setQ25(quantile(rMSSDArr, .25))\n        setQ50(quantile(rMSSDArr, .50))\n        setQ75(quantile(rMSSDArr, .75))\n    })\n  },[])\n\n\n  return (\n    <LineChart width={1000} height={600} data={data}>\n      <Line type=\"monotone\" dataKey=\"rMSSD\" stroke=\"#82ca9d\" />\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n      <ReferenceLine y={q25} label=\"25th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n      <ReferenceLine y={q50} label=\"50th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n      <ReferenceLine y={q75} label=\"75th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"createdAt\" />\n      <YAxis />\n      <Tooltip/>\n    </LineChart>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}