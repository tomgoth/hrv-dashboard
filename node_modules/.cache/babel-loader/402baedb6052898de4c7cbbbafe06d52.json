{"ast":null,"code":"var _jsxFileName = \"/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { quantile } from './utils/math';\nimport moment from 'moment';\nimport { Line } from '@nivo/line';\nconst commonProperties = {\n  width: 900,\n  height: 400,\n  margin: {\n    top: 20,\n    right: 20,\n    bottom: 60,\n    left: 80\n  },\n  animate: true,\n  enableSlices: 'x'\n};\n\nconst CustomSymbol = ({\n  size,\n  color,\n  borderWidth,\n  borderColor\n}) => /*#__PURE__*/React.createElement(\"g\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  fill: \"#fff\",\n  r: size / 2,\n  strokeWidth: borderWidth,\n  stroke: borderColor,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  r: size / 5,\n  strokeWidth: borderWidth,\n  stroke: borderColor,\n  fill: color,\n  fillOpacity: 0.35,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}));\n\nfunction App() {\n  const [data, setData] = useState([{\n    id: 'fake corp. A',\n    data: [{\n      x: '1985-21-05 00:00:00',\n      y: 1\n    }]\n  }]);\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent').then(response => {\n      let r = response.data.data;\n      console.log(r);\n      let rMSSDArr = r.map(datum => datum.rMSSD);\n      let rMSSDData = r.map(datum => {\n        return {\n          y: datum.rMSSD,\n          x: moment(datum.createdAt).format(\"YYYY-MM-DD hh:mm:ss\")\n        };\n      });\n      let SDNNData = r.map(datum => {\n        return {\n          y: datum.SDNN,\n          x: moment(datum.createdAt).format(\"YYYY-MM-DD hh:mm:ss\")\n        };\n      });\n      let d = [{\n        id: \"rMSSD\",\n        data: rMSSDData\n      }, {\n        id: \"SDNN\",\n        data: SDNNData\n      }];\n      console.log(d);\n      setData(d);\n      setQ25(quantile(rMSSDArr, .25));\n      setQ50(quantile(rMSSDArr, .50));\n      setQ75(quantile(rMSSDArr, .75));\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chartcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Line, Object.assign({}, commonProperties, {\n    data: data,\n    xScale: {\n      type: 'time',\n      format: \"%Y-%m-%d %H:%M:%S\",\n      precision: 'minute'\n    },\n    xFormat: \"time:%Y-%m-%d %H:%M:%S\",\n    yScale: {\n      type: 'linear',\n      stacked: false\n    },\n    axisLeft: {\n      legend: 'HRV in ms',\n      legendOffset: 12\n    },\n    axisBottom: {\n      format: '%m/%d',\n      tickValues: 'every 10 days',\n      legend: 'Date of Reading',\n      legendOffset: -12\n    },\n    curve: \"linear\",\n    enablePointLabel: false,\n    pointSymbol: CustomSymbol,\n    pointSize: 5,\n    pointBorderWidth: 1,\n    pointBorderColor: {\n      from: 'color',\n      modifiers: [['darker', 0.3]]\n    },\n    useMesh: true,\n    enableSlices: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js"],"names":["React","useState","useEffect","axios","quantile","moment","Line","commonProperties","width","height","margin","top","right","bottom","left","animate","enableSlices","CustomSymbol","size","color","borderWidth","borderColor","App","data","setData","id","x","y","q25","setQ25","q50","setQ50","q75","setQ75","get","then","response","r","console","log","rMSSDArr","map","datum","rMSSD","rMSSDData","createdAt","format","SDNNData","SDNN","d","type","precision","stacked","legend","legendOffset","tickValues","from","modifiers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport axios from \"axios\"\nimport { quantile } from './utils/math'\nimport moment from 'moment'\nimport { Line } from '@nivo/line'\n\n\nconst commonProperties = {\n  width: 900,\n  height: 400,\n  margin: { top: 20, right: 20, bottom: 60, left: 80 },\n  animate: true,\n  enableSlices: 'x',\n}\n\nconst CustomSymbol = ({ size, color, borderWidth, borderColor }) => (\n  <g>\n      <circle fill=\"#fff\" r={size / 2} strokeWidth={borderWidth} stroke={borderColor} />\n      <circle\n          r={size / 5}\n          strokeWidth={borderWidth}\n          stroke={borderColor}\n          fill={color}\n          fillOpacity={0.35}\n      />\n  </g>\n)\n\n\nfunction App() {\n  const [data, setData] = useState([{id: 'fake corp. A', data: [{x: '1985-21-05 00:00:00', y: 1}]}]);\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent')\n      .then((response) => {\n        let r = response.data.data\n        console.log(r)\n        let rMSSDArr = r.map(datum => datum.rMSSD)\n        let rMSSDData = r.map(datum => { return {y: datum.rMSSD, x: moment(datum.createdAt).format(\"YYYY-MM-DD hh:mm:ss\")} })\n        let SDNNData = r.map(datum => { return {y: datum.SDNN, x: moment(datum.createdAt).format(\"YYYY-MM-DD hh:mm:ss\")} })\n        let d = [{id: \"rMSSD\", data: rMSSDData}, {id:\"SDNN\", data: SDNNData}]\n\n        console.log(d)\n      \n        setData(d);\n        setQ25(quantile(rMSSDArr, .25))\n        setQ50(quantile(rMSSDArr, .50))\n        setQ75(quantile(rMSSDArr, .75))\n    })\n  },[])\n\n  \n\n  return (\n  \n  <div className=\"chartcontainer\">\n    <Line\n        {...commonProperties}\n        data={data}\n        xScale={{\n            type: 'time',\n            format: \"%Y-%m-%d %H:%M:%S\",\n            precision: 'minute',\n        }}\n        xFormat=\"time:%Y-%m-%d %H:%M:%S\"\n        yScale={{\n            type: 'linear',\n            stacked: false,\n        }}\n        axisLeft={{\n            legend: 'HRV in ms',\n            legendOffset: 12,\n        }}\n        axisBottom={{\n            format: '%m/%d',\n            tickValues: 'every 10 days',\n            legend: 'Date of Reading',\n            legendOffset: -12,\n        }}\n        curve='linear'\n        enablePointLabel={false}\n        pointSymbol={CustomSymbol}\n        pointSize={5}\n        pointBorderWidth={1}\n        pointBorderColor={{\n            from: 'color',\n            modifiers: [['darker', 0.3]],\n        }}\n        useMesh={true}\n        enableSlices={false}\n    />\n  </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}