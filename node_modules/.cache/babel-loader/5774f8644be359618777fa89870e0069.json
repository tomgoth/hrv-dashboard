{"ast":null,"code":"var _jsxFileName = \"/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport axios from \"axios\"; //const data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400}];\n\nfunction App() {\n  const [data, setData] = useState();\n  const [avgSDNN, setAvgSDNN] = useState();\n  const [avgRMSSD, setAvgRMSSD] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent').then(response => {\n      let r = response.data.data;\n      setData(r);\n      let totalSDNN = r.reduce((total, datum) => {\n        return total += datum.SDNN;\n      }, 0);\n      let totalRMSSD = r.reduce((total, datum) => {\n        return total += datum.rMSSD;\n      }, 0);\n      setAvgSDNN(totalSDNN / r.length);\n      setAvgRMSSD(totalRMSSD / r.length);\n      console.log(response);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(LineChart, {\n    width: 1000,\n    height: 600,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"rMSSD\",\n    stroke: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    stroke: \"#ccc\",\n    strokeDasharray: \"5 5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: avgRMSSD,\n    label: \"Average rMSSD\",\n    stroke: \"yellow\",\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"createdAt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js"],"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","axios","App","data","setData","avgSDNN","setAvgSDNN","avgRMSSD","setAvgRMSSD","get","then","response","r","totalSDNN","reduce","total","datum","SDNN","totalRMSSD","rMSSD","length","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,aAAxC,EAAuDC,OAAvD,EAAgEC,aAAhE,QAAqF,UAArF;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAGA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,EAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,EAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAACQ,GAAN,CAAU,8BAAV,EACGC,IADH,CACSC,QAAD,IAAc;AAClB,UAAIC,CAAC,GAAGD,QAAQ,CAACR,IAAT,CAAcA,IAAtB;AACAC,MAAAA,OAAO,CAACQ,CAAD,CAAP;AACA,UAAIC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAAS,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAC,eAAOD,KAAK,IAAIC,KAAK,CAACC,IAAtB;AAA2B,OAAvD,EAAwD,CAAxD,CAAhB;AACA,UAAIC,UAAU,GAAGN,CAAC,CAACE,MAAF,CAAS,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAC,eAAOD,KAAK,IAAIC,KAAK,CAACG,KAAtB;AAA4B,OAAxD,EAAyD,CAAzD,CAAjB;AACAb,MAAAA,UAAU,CAACO,SAAS,GAACD,CAAC,CAACQ,MAAb,CAAV;AACAZ,MAAAA,WAAW,CAACU,UAAU,GAACN,CAAC,CAACQ,MAAd,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACH,KATD;AAUD,GAXQ,EAWP,EAXO,CAAT;AAaA,sBACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,IAAlB;AAAwB,IAAA,MAAM,EAAE,GAAhC;AAAqC,IAAA,IAAI,EAAER,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,OAA9B;AAAsC,IAAA,MAAM,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAC,MAAtB;AAA6B,IAAA,eAAe,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,aAAD;AAAe,IAAA,CAAC,EAAEI,QAAlB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,MAAM,EAAC,QAAzD;AAAkE,IAAA,eAAe,EAAC,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADA;AAWE;;AAEJ,eAAeL,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport axios from \"axios\";\n\n//const data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400}];\n\n\nfunction App() {\n  const [data, setData] = useState();\n  const [avgSDNN, setAvgSDNN] = useState();\n  const [avgRMSSD, setAvgRMSSD] = useState();\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent')\n      .then((response) => {\n        let r = response.data.data\n        setData(r);\n        let totalSDNN = r.reduce((total, datum) => {return total += datum.SDNN},0)\n        let totalRMSSD = r.reduce((total, datum) => {return total += datum.rMSSD},0)\n        setAvgSDNN(totalSDNN/r.length)\n        setAvgRMSSD(totalRMSSD/r.length)\n        console.log(response)\n    })\n  },[])\n\n  return (\n  <LineChart width={1000} height={600} data={data}>\n    \n    <Line type=\"monotone\" dataKey=\"rMSSD\" stroke=\"#82ca9d\" />\n    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n    \n    <ReferenceLine y={avgRMSSD} label=\"Average rMSSD\" stroke=\"yellow\" strokeDasharray=\"3 3\" />\n    <XAxis dataKey=\"createdAt\" />\n    <YAxis />\n    <Tooltip/>\n  </LineChart>\n  )}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}