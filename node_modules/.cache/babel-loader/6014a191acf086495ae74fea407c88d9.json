{"ast":null,"code":"var _jsxFileName = \"/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { quantile } from './utils/math';\nimport moment from 'moment';\nimport { VictoryLine, VictoryChart, VictoryBrushContainer, VictoryAxis, VictoryZoomContainer } from 'victory';\n\nfunction App() {\n  const [data, setData] = useState({\n    rMSSD: [],\n    SDNN: []\n  });\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n  const [selectedDomain, setSelectedDomain] = useState();\n  const [zoomDomain, setZoomDomain] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent').then(response => {\n      let r = response.data.data;\n      console.log(r);\n      let rMSSDArr = r.map(datum => datum.rMSSD);\n      let rMSSDData = r.map(datum => {\n        return {\n          y: datum.rMSSD,\n          x: moment(datum.createdAt).toDate()\n        };\n      });\n      let SDNNData = r.map(datum => {\n        return {\n          y: datum.SDNN,\n          x: moment(datum.createdAt).toDate()\n        };\n      });\n      setData({\n        rMSSD: rMSSDData,\n        SDNN: SDNNData\n      });\n      setQ25(quantile(rMSSDArr, .25));\n      setQ50(quantile(rMSSDArr, .50));\n      setQ75(quantile(rMSSDArr, .75));\n    });\n  }, []);\n\n  const handleZoom = domain => {\n    setSelectedDomain(domain);\n  };\n\n  const handleBrush = domain => {\n    setZoomDomain(domain);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VictoryChart, {\n    width: 600,\n    height: 350,\n    scale: {\n      x: \"time\"\n    },\n    containerComponent: /*#__PURE__*/React.createElement(VictoryZoomContainer, {\n      responsive: false,\n      zoomDimension: \"x\",\n      zoomDomain: zoomDomain,\n      onZoomDomainChange: handleZoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"tomato\"\n      }\n    },\n    data: data.rMSSD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"tomato\"\n      }\n    },\n    data: data.SDNN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(VictoryChart, {\n    padding: {\n      top: 0,\n      left: 50,\n      right: 50,\n      bottom: 30\n    },\n    width: 600,\n    height: 90,\n    scale: {\n      x: \"time\"\n    },\n    containerComponent: /*#__PURE__*/React.createElement(VictoryBrushContainer, {\n      responsive: false,\n      brushDimension: \"x\",\n      brushDomain: selectedDomain,\n      onBrushDomainChange: handleBrush,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VictoryLine, {\n    style: {\n      data: {\n        stroke: \"tomato\"\n      }\n    },\n    data: data.rMSSD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js"],"names":["React","useState","useEffect","axios","quantile","moment","VictoryLine","VictoryChart","VictoryBrushContainer","VictoryAxis","VictoryZoomContainer","App","data","setData","rMSSD","SDNN","q25","setQ25","q50","setQ50","q75","setQ75","selectedDomain","setSelectedDomain","zoomDomain","setZoomDomain","get","then","response","r","console","log","rMSSDArr","map","datum","rMSSDData","y","x","createdAt","toDate","SDNNData","handleZoom","domain","handleBrush","stroke","top","left","right","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport axios from \"axios\"\nimport { quantile } from './utils/math'\nimport moment from 'moment'\nimport {VictoryLine, VictoryChart, VictoryBrushContainer, VictoryAxis, VictoryZoomContainer} from 'victory'\n\n\n\n\n\nfunction App() {\n  const [data, setData] = useState({rMSSD: [], SDNN: []});\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n  const [selectedDomain, setSelectedDomain] = useState();\n  const [zoomDomain, setZoomDomain] = useState();\n\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent')\n      .then((response) => {\n        let r = response.data.data\n        console.log(r)\n        let rMSSDArr = r.map(datum => datum.rMSSD)\n        let rMSSDData = r.map(datum => { return {y: datum.rMSSD, x: moment(datum.createdAt).toDate()} })\n        let SDNNData = r.map(datum => { return {y: datum.SDNN, x: moment(datum.createdAt).toDate()} })\n        \n        setData({rMSSD: rMSSDData, SDNN: SDNNData});\n        setQ25(quantile(rMSSDArr, .25))\n        setQ50(quantile(rMSSDArr, .50))\n        setQ75(quantile(rMSSDArr, .75))\n    })\n  },[])\n\n  const handleZoom = (domain) => {\n    setSelectedDomain(domain)\n  }\n\n const handleBrush = (domain) => {\n    setZoomDomain(domain)\n  }\n\n  \n      return (\n        <div>\n            <VictoryChart width={600} height={350} scale={{x: \"time\"}}\n              containerComponent={\n                <VictoryZoomContainer responsive={false}\n                  zoomDimension=\"x\"\n                  zoomDomain={zoomDomain}\n                  onZoomDomainChange={handleZoom}\n                />\n              }\n            >\n              <VictoryLine\n                style={{\n                  data: {stroke: \"tomato\"}\n                }}\n                data={data.rMSSD}\n              />\n              <VictoryLine\n                style={{\n                  data: {stroke: \"tomato\"}\n                }}\n                data={data.SDNN}\n              />\n  \n            </VictoryChart>\n  \n            <VictoryChart\n              padding={{top: 0, left: 50, right: 50, bottom: 30}}\n              width={600} height={90} scale={{x: \"time\"}}\n              containerComponent={\n                <VictoryBrushContainer responsive={false}\n                  brushDimension=\"x\"\n                  brushDomain={selectedDomain}\n                  onBrushDomainChange={handleBrush}\n                />\n              }\n            >\n              \n              <VictoryLine\n                style={{\n                  data: {stroke: \"tomato\"}\n                }}\n                data={data.rMSSD}\n              />\n            </VictoryChart>\n        </div>\n      );\n  }\n  \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}