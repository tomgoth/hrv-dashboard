{"ast":null,"code":"var _jsxFileName = \"/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport axios from \"axios\"; //const data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400}];\n\nfunction App() {\n  const [data, setData] = useState();\n  const [avgRMSSD, setAvgRMSSD] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent').then(response => {\n      let r = response.data.data;\n      setData(r);\n      setAvgRMSSD(mean(quantile(r.map(datum => datum.rMSSD), .75)));\n      console.log(response);\n    });\n  }, []);\n\n  const asc = arr => arr.sort((a, b) => a - b);\n\n  const sum = arr => arr.reduce((a, b) => a + b, 0);\n\n  const mean = arr => sum(arr) / arr.length; // sample standard deviation\n\n\n  const std = arr => {\n    const mu = mean(arr);\n    const diffArr = arr.map(a => (a - mu) ** 2);\n    return Math.sqrt(sum(diffArr) / (arr.length - 1));\n  };\n\n  const quantile = (arr, q) => {\n    const sorted = asc(arr);\n    const pos = (sorted.length - 1) * q;\n    const base = Math.floor(pos);\n    const rest = pos - base;\n\n    if (sorted[base + 1] !== undefined) {\n      return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\n    } else {\n      return sorted[base];\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(LineChart, {\n    width: 1000,\n    height: 600,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"rMSSD\",\n    stroke: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    stroke: \"#ccc\",\n    strokeDasharray: \"5 5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: avgRMSSD,\n    label: \"Average rMSSD\",\n    stroke: \"red\",\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"createdAt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js"],"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","axios","App","data","setData","avgRMSSD","setAvgRMSSD","get","then","response","r","mean","quantile","map","datum","rMSSD","console","log","asc","arr","sort","a","b","sum","reduce","length","std","mu","diffArr","Math","sqrt","q","sorted","pos","base","floor","rest","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport axios from \"axios\";\n\n//const data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400}];\n\n\nfunction App() {\n  const [data, setData] = useState();\n\n  const [avgRMSSD, setAvgRMSSD] = useState();\n\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent')\n      .then((response) => {\n        let r = response.data.data\n        setData(r);\n        \n        setAvgRMSSD(mean(quantile(r.map(datum => datum.rMSSD), .75)))\n        console.log(response)\n    })\n  },[])\n\n\nconst asc = arr => arr.sort((a, b) => a - b);\n\nconst sum = arr => arr.reduce((a, b) => a + b, 0);\n\nconst mean = arr => sum(arr) / arr.length;\n\n// sample standard deviation\nconst std = (arr) => {\n    const mu = mean(arr);\n    const diffArr = arr.map(a => (a - mu) ** 2);\n    return Math.sqrt(sum(diffArr) / (arr.length - 1));\n};\n\nconst quantile = (arr, q) => {\n    const sorted = asc(arr);\n    const pos = (sorted.length - 1) * q;\n    const base = Math.floor(pos);\n    const rest = pos - base;\n    if (sorted[base + 1] !== undefined) {\n        return sorted[base] + rest * (sorted[base + 1] - sorted[base]);\n    } else {\n        return sorted[base];\n    }\n};\n\n  return (\n  <LineChart width={1000} height={600} data={data}>\n    \n    <Line type=\"monotone\" dataKey=\"rMSSD\" stroke=\"#82ca9d\" />\n    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n    \n    <ReferenceLine y={avgRMSSD} label=\"Average rMSSD\" stroke=\"red\" strokeDasharray=\"3 3\" />\n    <XAxis dataKey=\"createdAt\" />\n    <YAxis />\n    <Tooltip/>\n  </LineChart>\n  )}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}