{"ast":null,"code":"var _jsxFileName = \"/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport axios from \"axios\";\nimport { quantile } from './utils/math';\nimport moment from 'moment';\nimport { ResponsiveLine } from '@nivo/line';\n\nfunction App() {\n  const [data, setData] = useState();\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent').then(response => {\n      let r = response.data.data;\n      let rMSSDArr = r.map(datum => datum.rMSSD);\n      let rMSSDData = r.map(datum => {\n        return {\n          y: datum.rMSSD,\n          x: moment(datum.createdAt).toDate()\n        };\n      });\n      let d = [{\n        id: \"rMSSD\",\n        data: rMSSDData\n      }];\n      console.log(d);\n      setData(d);\n      setQ25(quantile(rMSSDArr, .25));\n      setQ50(quantile(rMSSDArr, .50));\n      setQ75(quantile(rMSSDArr, .75));\n    });\n  }, []);\n\n  const tickFormatter = tick => moment(tick).format('MM/dd');\n\n  return (\n    /*#__PURE__*/\n    // <LineChart width={1000} height={600} data={data}>\n    //   <Line type=\"natural\" dataKey=\"rMSSD\" stroke=\"#82ca9d\" />\n    //   <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n    //   <ReferenceLine y={q25} label=\"25th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n    //   <ReferenceLine y={q50} label=\"50th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n    //   <ReferenceLine y={q75} label=\"75th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n    //   <XAxis dataKey=\"date\" tickFormatter={tickFormatter}  scale=\"time\" type=\"number\" domain={['dataMin', 'dataMax']}/>\n    //   <YAxis />\n    //   <Tooltip/>\n    // </LineChart>\n    React.createElement(\"div\", {\n      className: \"chartcontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ResponsiveLine, {\n      data: data,\n      margin: {\n        top: 50,\n        right: 110,\n        bottom: 50,\n        left: 60\n      },\n      xScale: {\n        type: 'time',\n        format: '%Y-%m-%d',\n        precision: 'day'\n      },\n      yScale: {\n        type: 'linear',\n        min: 'auto',\n        max: 'auto',\n        stacked: true,\n        reverse: false\n      },\n      axisTop: null,\n      axisRight: null,\n      axisBottom: {\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'transportation',\n        legendOffset: 36,\n        legendPosition: 'middle'\n      },\n      axisLeft: {\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'count',\n        legendOffset: -40,\n        legendPosition: 'middle'\n      },\n      colors: {\n        scheme: 'nivo'\n      },\n      pointSize: 10,\n      pointColor: {\n        theme: 'background'\n      },\n      pointBorderWidth: 2,\n      pointBorderColor: {\n        from: 'serieColor'\n      },\n      pointLabel: \"y\",\n      pointLabelYOffset: -12,\n      useMesh: true,\n      legends: [{\n        anchor: 'bottom-right',\n        direction: 'column',\n        justify: false,\n        translateX: 100,\n        translateY: 0,\n        itemsSpacing: 0,\n        itemDirection: 'left-to-right',\n        itemWidth: 80,\n        itemHeight: 20,\n        itemOpacity: 0.75,\n        symbolSize: 12,\n        symbolShape: 'circle',\n        symbolBorderColor: 'rgba(0, 0, 0, .5)',\n        effects: [{\n          on: 'hover',\n          style: {\n            itemBackground: 'rgba(0, 0, 0, .03)',\n            itemOpacity: 1\n          }\n        }]\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js"],"names":["React","useState","useEffect","Fragment","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","axios","quantile","moment","ResponsiveLine","App","data","setData","q25","setQ25","q50","setQ50","q75","setQ75","get","then","response","r","rMSSDArr","map","datum","rMSSD","rMSSDData","y","x","createdAt","toDate","d","id","console","log","tickFormatter","tick","format","top","right","bottom","left","type","precision","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","scheme","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react'\nimport './App.css'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts'\nimport axios from \"axios\"\nimport { quantile } from './utils/math'\nimport moment from 'moment'\nimport { ResponsiveLine } from '@nivo/line'\n\n\n\n\n\nfunction App() {\n  const [data, setData] = useState();\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent')\n      .then((response) => {\n        let r = response.data.data\n        let rMSSDArr = r.map(datum => datum.rMSSD)\n        let rMSSDData = r.map(datum => { return {y: datum.rMSSD, x: moment(datum.createdAt).toDate()} })\n        let d = [{id: \"rMSSD\", data: rMSSDData}]\n      \n        console.log(d)\n      \n        setData(d);\n        setQ25(quantile(rMSSDArr, .25))\n        setQ50(quantile(rMSSDArr, .50))\n        setQ75(quantile(rMSSDArr, .75))\n    })\n  },[])\n\n  const tickFormatter = (tick) => moment(tick).format('MM/dd')\n\n  return (\n    // <LineChart width={1000} height={600} data={data}>\n    //   <Line type=\"natural\" dataKey=\"rMSSD\" stroke=\"#82ca9d\" />\n    //   <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n    //   <ReferenceLine y={q25} label=\"25th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n    //   <ReferenceLine y={q50} label=\"50th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n    //   <ReferenceLine y={q75} label=\"75th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n    //   <XAxis dataKey=\"date\" tickFormatter={tickFormatter}  scale=\"time\" type=\"number\" domain={['dataMin', 'dataMax']}/>\n    //   <YAxis />\n    //   <Tooltip/>\n    // </LineChart>\n    <div className=\"chartcontainer\">\n    <ResponsiveLine\n    \n    data={data}\n    margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n    \n    xScale={{\n      type: 'time',\n      format: '%Y-%m-%d',\n      precision: 'day',\n  }}\n    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n    axisTop={null}\n    axisRight={null}\n    axisBottom={{\n        orient: 'bottom',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'transportation',\n        legendOffset: 36,\n        legendPosition: 'middle'\n    }}\n    axisLeft={{\n        orient: 'left',\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'count',\n        legendOffset: -40,\n        legendPosition: 'middle'\n    }}\n    colors={{ scheme: 'nivo' }}\n    pointSize={10}\n    pointColor={{ theme: 'background' }}\n    pointBorderWidth={2}\n    pointBorderColor={{ from: 'serieColor' }}\n    pointLabel=\"y\"\n    pointLabelYOffset={-12}\n    useMesh={true}\n    legends={[\n        {\n            anchor: 'bottom-right',\n            direction: 'column',\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 80,\n            itemHeight: 20,\n            itemOpacity: 0.75,\n            symbolSize: 12,\n            symbolShape: 'circle',\n            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n            effects: [\n                {\n                    on: 'hover',\n                    style: {\n                        itemBackground: 'rgba(0, 0, 0, .03)',\n                        itemOpacity: 1\n                    }\n                }\n            ]\n        }\n    ]}\n/>\n</div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}