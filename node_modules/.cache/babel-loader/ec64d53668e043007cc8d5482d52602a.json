{"ast":null,"code":"var _jsxFileName = \"/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport axios from \"axios\";\nimport { quantile } from './utils/math';\nimport * as d3 from \"d3\";\nimport moment from 'moment';\n\nfunction App() {\n  const [data, setData] = useState();\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent').then(response => {\n      let r = response.data.data;\n      let rMSSDArr = r.map(datum => datum.rMSSD); // r = r.map(datum => { \n      //   var parseTime = d3.timeParse(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n      //  return {rMSSD: datum.rMSSD, date: parseTime(datum.createdAt)} })\n\n      console.log(r);\n      setData(r);\n      setQ25(quantile(rMSSDArr, .25));\n      setQ50(quantile(rMSSDArr, .50));\n      setQ75(quantile(rMSSDArr, .75));\n    });\n  }, []);\n\n  const tickFormatter = tick => moment(tick).format();\n\n  return /*#__PURE__*/React.createElement(LineChart, {\n    width: 1000,\n    height: 600,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"rMSSD\",\n    stroke: \"#82ca9d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    stroke: \"#ccc\",\n    strokeDasharray: \"5 5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: q25,\n    label: \"25th Percentile\",\n    stroke: \"red\",\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: q50,\n    label: \"50th Percentile\",\n    stroke: \"red\",\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: q75,\n    label: \"75th Percentile\",\n    stroke: \"red\",\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"createdAt\",\n    tickFormatter: tickFormatter,\n    type: \"number\",\n    scale: \"time\",\n    domain: ['dataMin', 'dataMax'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gotht/Documents/PMC/hrv-dashboard/src/App.js"],"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","axios","quantile","d3","moment","App","data","setData","q25","setQ25","q50","setQ50","q75","setQ75","get","then","response","r","rMSSDArr","map","datum","rMSSD","console","log","tickFormatter","tick","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine } from 'recharts';\nimport axios from \"axios\";\nimport { quantile } from './utils/math'\nimport * as d3 from \"d3\";\nimport moment from 'moment'\n\n\n\n\n\nfunction App() {\n  const [data, setData] = useState();\n  const [q25, setQ25] = useState();\n  const [q50, setQ50] = useState();\n  const [q75, setQ75] = useState();\n\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/recent')\n      .then((response) => {\n        let r = response.data.data\n        let rMSSDArr = r.map(datum => datum.rMSSD)\n       // r = r.map(datum => { \n       //   var parseTime = d3.timeParse(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n      //  return {rMSSD: datum.rMSSD, date: parseTime(datum.createdAt)} })\n        console.log(r)\n      \n        setData(r);\n        setQ25(quantile(rMSSDArr, .25))\n        setQ50(quantile(rMSSDArr, .50))\n        setQ75(quantile(rMSSDArr, .75))\n    })\n  },[])\n\n  const tickFormatter = (tick) => moment(tick).format()\n\n  return (\n    <LineChart width={1000} height={600} data={data}>\n      <Line type=\"natural\" dataKey=\"rMSSD\" stroke=\"#82ca9d\" />\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n      <ReferenceLine y={q25} label=\"25th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n      <ReferenceLine y={q50} label=\"50th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n      <ReferenceLine y={q75} label=\"75th Percentile\" stroke=\"red\" strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"createdAt\" tickFormatter={tickFormatter} type=\"number\" scale=\"time\" domain={['dataMin', 'dataMax']}/>\n      <YAxis />\n      <Tooltip/>\n    </LineChart>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}